@startuml Channel
abstract Channel {
    - id: String
    - location: String
    - name: String
    - occupied: Boolean
    - shared: Integer
    - type: String

    + setLocation(location: String)
    + getLocation(): String
    + setName(name: String)
    + getName(): String
    + setOccupied(occupied: Boolean)
    + getOccupied(): Boolean
    + setShared(shared: Integer)
    + getShared(): Integer
    + setType(type: String)
    + getType(): String
}
note top of Channel {
    There will be some pre-defined channels which are attached to supported connections.
    E.g.: location: /dev/ttyS1, name: COM1;location: /sys/class/gpio/gpio24, name: IO1
    They are vary depending on master device model
}
note right of Channel::id {
    id: autogenerated
}
note right of Channel::location {
    location:
    - Com port or GPIO: Device file of the connection.
    E.g.: /dev/ttyS1 or /sys/class/gpio/gpio24
    - TCP/IP: <IP.Address>:<Port>
}
note right of Channel::name {
    name: (Optional) Can be autogenerated once detail detected from the device files.
    Otherwise, name it manually or leave it empty.
}
note right of Channel::occupied {
    occupied: True if it is pure serial connection and being used by some device.
    False if it is share-able like Modbus or BACnet connection.
}
note right of Channel::shared {
    shared: Fixed 1 if occupied is True. Else, it is some integer number sharing same connection.
}
note right of Channel::type {
    type: based on location, it will autogenerated or manually set by user.
    - TCP/IP:  If the location is an IP address.
    - IO: If the location is a file mapped to the GPIO
    - RS232: Select by user if location is ttyS* file.
    - RS485: (Default) if location is ttyS* file. Switch-able bw RS232/485 dependin on model.
    }
@enduml